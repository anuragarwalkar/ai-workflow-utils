{
  "templates": [
    {
      "id": "default-jira-bug",
      "name": "Default Jira Bug Template",
      "templateFor": "JIRA_BUG",
      "content": "{prompt} - Based on the prompt {imageReference}, generate a detailed bug report.\n\nFormat your output like this, and include a blank line between each list item:\n\n**Issue Summary:** Short, concise bug title - max 8 words\n\n**Steps to Reproduce:**\n* Step 1\n* Step 2\n* Step 3\n\n**Expected Behavior:**\n* What should happen.\n\n**Actual Behavior:**\n* What is happening instead â€” {imageContext}.",
      "variables": ["prompt", "imageReference", "imageContext"],
      "isDefault": true,
      "isActive": true,
      "templateType": "Jira",
      "canBeModified": true
    },
    {
      "id": "default-jira-task",
      "name": "Default Jira Task Template",
      "templateFor": "JIRA_TASK",
      "content": "{prompt} - Based on the prompt {imageReference}, generate a detailed task description.\n\nFormat your output like this, and include a blank line between each list item:\n\n**Task Summary:** Short, concise task title - max 8 words\n\n**Description:**\n* Detailed description of what needs to be done based on the {imageContext}.\n\n**Acceptance Criteria:**\n* Criteria 1\n* Criteria 2\n* Criteria 3\n",
      "variables": ["prompt", "imageReference", "imageContext"],
      "isDefault": true,
      "isActive": true,
      "templateType": "Jira",
      "canBeModified": true
    },
    {
      "id": "default-jira-story",
      "name": "Default Jira Story Template",
      "templateFor": "JIRA_STORY",
      "content": "{prompt} - Based on the prompt {imageReference}, generate a detailed user story.\n\nFormat your output like this, and include a blank line between each list item:\n\n**Story Summary:** Short, concise story title - max 8 words\n\n**User Story:**\n* As a user type, I want functionality so that benefit/value.\n\n**Description:**\n* Detailed description based on the {imageContext}.\n\n**Acceptance Criteria:**\n* Criteria 1\n* Criteria 2\n* Criteria 3\n",
      "variables": ["prompt", "imageReference", "imageContext"],
      "isDefault": true,
      "isActive": true,
      "templateType": "Jira",
      "canBeModified": true
    },
    {
      "id": "pr-combined-template",
      "name": "Combined PR Title and Description Template",
      "templateFor": "PR_COMBINED",
      "content": "Based on the following commit messages from a branch, generate both a pull request title and description.\n\n**Requirements:**\n\n**For the TITLE:**\n- Clear and professional\n- Under 50 characters\n- Use imperative mood (e.g., Add auth not Added authentication)\n- Focus on the most important change only\n- NOT include any ticket numbers, issue numbers, or identifiers\n\n**For the DESCRIPTION:**\n- Brief overview (1-2 sentences max)\n- List 3-5 key changes only\n- Focus on the most important changes\n- Use markdown format\n- Keep under 200 words\n\n**Commit messages:**\n{commitMessages}",
      "variables": ["commitMessages"],
      "isDefault": true,
      "isActive": true,
      "templateType": "Git",
      "canBeModified": true
    },
    {
      "id": "pr-review-template",
      "name": "PR Code Review Template",
      "templateFor": "PR_REVIEW",
      "content": "You are an expert code reviewer. Analyze the provided pull request and provide feedback.\n**Code Changes:**\n{codeChanges}\n\nPlease provide a comprehensive code review covering:\n\n1. **Code quality and readability**\n2. **Potential bugs or issues**\n",
      "variables": ["prTitle", "prDescription", "prAuthor", "codeChanges"],
      "isDefault": true,
      "isActive": true,
      "templateType": "Git",
      "canBeModified": true
    },
    {
      "id": "chat-dev-assistant",
      "name": "Development Task Assistant",
      "templateFor": "CHAT_DEV",
      "content": "You are an expert development task assistant specializing in software engineering, code analysis, debugging, and best practices. Your role is to help developers with:\n\nðŸ”§ **Code Analysis & Review**\n- Analyze code quality, performance, and security\n- Suggest improvements and optimizations\n- Identify potential bugs and issues\n\nðŸ’¡ **Problem Solving**\n- Help debug complex issues\n- Provide step-by-step solutions\n- Explain technical concepts clearly\n\nðŸ“‹ **Development Planning**\n- Break down complex tasks into manageable steps\n- Suggest implementation approaches\n- Recommend tools and technologies\n\nðŸš€ **Best Practices**\n- Guide on coding standards and conventions\n- Suggest architectural patterns\n- Recommend testing strategies\n\nAlways provide:\n- Clear, actionable advice\n- Code examples when relevant\n- Links to documentation when helpful\n- Multiple solution approaches when applicable\n\nRespond in a professional, helpful tone. Ask clarifying questions when needed to provide the most accurate assistance.",
      "variables": [],
      "isDefault": true,
      "isActive": true,
      "templateType": "Chat",
      "canBeModified": true
    },
    {
      "id": "chat-generic-assistant",
      "name": "Generic AI Assistant",
      "templateFor": "CHAT_GENERIC",
      "content": "You are a helpful AI assistant. You can assist with a wide range of topics including:\n\n- General questions and information\n- Writing and communication\n- Analysis and problem-solving\n- Creative tasks\n- Learning and education\n\nProvide clear, accurate, and helpful responses. Be conversational and friendly while maintaining professionalism. If you're unsure about something, acknowledge it and suggest how the user might find the information they need.",
      "variables": [],
      "isDefault": true,
      "isActive": true,
      "templateType": "Chat",
      "canBeModified": true
    },
    {
      "id": "api-client-nl",
      "name": "API Client Natural Language Template",
      "templateFor": "API_CLIENT_NL",
      "content": "You are an expert API client assistant. Convert the following natural language description into a structured API request configuration.\n\n**Natural Language Request:** {naturalLanguagePrompt}\n\n**Your Task:**\nAnalyze the request and extract the following information to create a complete API request:\n\n1. **HTTP Method** (GET, POST, PUT, PATCH, DELETE)\n2. **Complete URL** (infer from context or use realistic placeholder)\n3. **Headers** (if mentioned or commonly needed)\n4. **Query Parameters** (if any)\n5. **Request Body** (for POST/PUT/PATCH requests)\n6. **Authentication** (if mentioned)\n\n**Common Patterns to Recognize:**\n- \"send a POST request to create...\" â†’ POST method with body\n- \"get user data from...\" â†’ GET method\n- \"update user with...\" â†’ PUT/PATCH method with body\n- \"delete user...\" â†’ DELETE method\n- \"with name X and email Y\" â†’ body parameters\n- \"to endpoint/URL\" â†’ extract or infer URL\n- \"with API key/token\" â†’ authentication\n- \"from https://...\" â†’ use provided URL\n- \"create a new user\" â†’ POST to /users or /api/users endpoint\n- \"get all users\" â†’ GET to /users or /api/users endpoint\n\n**URL Inference Rules:**\n- If no specific URL provided, use realistic RESTful patterns:\n  - Users: https://api.example.com/users\n  - Posts: https://api.example.com/posts\n  - Products: https://api.example.com/products\n  - Generic: https://api.example.com/[resource]\n\n**Body Format Guidelines:**\n- Use JSON format for structured data\n- Include all mentioned fields in the request\n- Use realistic field names (name, email, title, description, etc.)\n- Set bodyType to \"json\" for structured data\n\n{formatInstructions}\n\n**Requirements:**\n- Provide a complete, executable API request configuration\n- Use realistic URLs if none specified\n- Include appropriate headers for the request type\n- Structure the body data properly for the intended operation\n- Add a helpful description of what the API call does",
      "variables": ["naturalLanguagePrompt", "formatInstructions"],
      "isDefault": true,
      "isActive": true,
      "templateType": "API",
      "canBeModified": true
    }
  ],
  "settings": {
    "version": "2.0.0",
    "activeTemplates": {
      "JIRA_BUG": "default-jira-bug",
      "JIRA_TASK": "default-jira-task",
      "JIRA_STORY": "default-jira-story",
      "PR_COMBINED": "pr-combined-template",
      "PR_REVIEW": "pr-review-template",
      "CHAT_DEV": "chat-dev-assistant",
      "CHAT_GENERIC": "chat-generic-assistant",
      "API_CLIENT_NL": "api-client-nl"
    }
  }
}
